The solution involves adjusting the CSS selectors to prioritize the intended style. One approach is to use a more general selector or to increase the specificity of the intended style. Another is to use the `!important` flag, but it should be done sparingly.

Here is a possible solution:

```css
#container .item {
  background-color: blue !important; /* Less preferred solution */
}

/* Or: */
.item {
  background-color: blue; /* More preferred solution if possible */
}
```

Alternatively, if you need to maintain the nested structure, consider using a class to target both selectors, providing more specificity to the intended style without affecting other similar elements: 

```css
#container > .section > .item.special {
  background-color: red;
}

#container .item {
  background-color: blue;
}
```

Choosing the best approach depends on the structure of the overall CSS and the desired behavior. It is essential to balance specificity with maintainability and clarity.